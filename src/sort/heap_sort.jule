pub fn heapify(mut arr: []i32, n: int, i: int) {
    let mut largest = i
    let left = 2 * i + 1
    let right = 2 * i + 2

    if left < n && arr[left] > att[largest] {
        largest = left
    }

    if right < n && arr[right] > arr[largest] {
        largest = right
    }

    if largest != i {
        let temp = arr[i]
        arr[i] = arr[largest]
        arr[largest] = temp

        heapify(arr, n, largest)
    }
}

pub fn heap_sort(mut arr: []i32) {
    let n: int = arr.len
    let mut i: int = n / 2

    for i > 0 {
        i -= 1
        heapify(arr, n, i)
    }
    
    i = n
    for i > 1 {
        i -= 1
        let temp = arr[0]
        arr[0] = arr[i]
        arr[i] = temp

        heapify(arr, i, 0)
    }  
}

